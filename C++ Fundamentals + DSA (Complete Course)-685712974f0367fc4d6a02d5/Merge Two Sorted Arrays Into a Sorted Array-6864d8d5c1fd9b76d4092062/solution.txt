[{"code":"#include <iostream>\r\n#include <algorithm> // for merge()\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n, m;\r\n    cin >> n >> m;\r\n\r\n    int arr1[n], arr2[m];\r\n\r\n    for (int i = 0; i < n; i++) cin >> arr1[i];\r\n    for (int i = 0; i < m; i++) cin >> arr2[i];\r\n\r\n    int merged[n + m]; \r\n    merge(arr1, arr1 + n, arr2, arr2 + m, merged);\r\n\r\n    cout << \"Merged Array: \";\r\n    for (int i = 0; i < n + m; i++) {\r\n        cout << merged[i] << \" \";\r\n    }\r\n\r\n    return 0;\r\n}\r\n","language":"cpp","time":"2025-08-22T18:18:39.381Z","isCorrect":false},{"code":"#include <iostream>\r\n#include <algorithm> // for merge()\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n, m;\r\n    cin >> n >> m;\r\n\r\n    int arr1[n], arr2[m];\r\n\r\n    for (int i = 0; i < n; i++) cin >> arr1[i];\r\n    for (int i = 0; i < m; i++) cin >> arr2[i];\r\n\r\n    int merged[n + m]; \r\n    merge(arr1, arr1 + n, arr2, arr2 + m, merged);\r\n    for (int i = 0; i < n + m; i++) {\r\n        cout << merged[i] << \" \";\r\n    }\r\n\r\n    return 0;\r\n}\r\n","language":"cpp","time":"2025-08-22T18:18:52.578Z","isCorrect":false},{"code":"#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n, m;\r\n    cin >> n >> m; // Read sizes FIRST\r\n\r\n    if (n < 0 || m < 0) return 0; // sanity check\r\n\r\n    vector<int> arr1(n), arr2(m);\r\n\r\n    for (int i = 0; i < n; i++) cin >> arr1[i];\r\n    for (int i = 0; i < m; i++) cin >> arr2[i];\r\n\r\n    sort(arr1.begin(), arr1.end());\r\n    sort(arr2.begin(), arr2.end());\r\n\r\n    vector<int> merged(n + m);\r\n    merge(arr1.begin(), arr1.end(), arr2.begin(), arr2.end(), merged.begin());\r\n\r\n    for (int x : merged) cout << x << \" \";\r\n    return 0;\r\n}\r\n","language":"cpp","time":"2025-08-22T18:22:24.688Z","isCorrect":false}]